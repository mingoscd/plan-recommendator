<article id="new-place-form">
	<%= form_for @place do |f| %>
	  <div class="place-basics">
	  	<div class="place-name-group">
		  	<span class="fa fa-edit"></span>
		    <%= f.text_field :name, placeholder: "Name of the site" %> 		
	  	</div>
	  	<div class="place-type-group">
		  	<span class="fa fa-area-chart"></span>
		  	<%= f.select( :type_of_site, Category.all.collect {|p| p.name }, {include_blank: 'None'}) %>
	  	</div>
	  </div>
	  <div class="place-location">
		  <div class="place-geolocation-group">
		    <span class="fa fa-map-marker"></span>
		    <a href="" class="js-geolocateme">Geolocation</a>
		  </div>
	  	<div class="place-city-group">
		  	<span class="fa fa-building"></span>
		    <%= f.text_field :city, placeholder: "city" %>
	  	</div>
	  	<div class="place-address-group">
		  	<span class="fa fa-location-arrow"></span>
		  	<%= f.text_field :address, placeholder: "Address or googlemaps link" %>
		    <%= f.hidden_field :lat %>
		    <%= f.hidden_field :lon %>
		  </div>
	  </div>
	  <div class="place-price-group">
		  <span class="fa fa-money"></span>
	    <%= f.number_field :price, placeholder: "Price", step: 0.01, value: 0 %>
	    <%= f.select :currency, Currency.all.collect {|p| [p.symbol, p.name] } %>
	  </div>
	  <div class="place-input">
	    <%= f.file_field :photo %>
	  </div>
	  <%= f.submit 'Add place', class: "btn btn-add-place" %>
	<% end %>	
</article>

<!-- errors -->
<% if @place.errors.any? %>
	<div class="alert alert--error alert-register-error">
		<ul>
			<% @place.errors.full_messages.each do |error_msg| %>
				<li><%= error_msg %></li>
			<% end %>
		</ul>
	</div>
<% end %>

<!-- To add coords when the address is fill -->
<script>
$("#place_address").on('change', function(e){
	var city = $('input[name="place[city]"]').val();
	var address = $('input[name="place[address]"]').val();

	if(address.substring(0,8) == 'https://'){
		var coords = address.split("@")[1].split(",");
		$('input[name="place[lat]"]').val(coords[0]);
		$('input[name="place[lon]"]').val(coords[1]);
		query = coords[0]+","+coords[1];
		getAddressByLatLon(query);
	}else{
		var query = (address+" "+city).replace(/ /g,"+");
		getLatLonByAddress(query);
	}
});
function getLatLonByAddress(query){
	var data;
	var url = 'https://maps.googleapis.com/maps/api/geocode/json?address=';
	$.ajax({ dataType: "json", url: url+query, data: data, success: function(data){
			var lat = data.results[0].geometry.location.lat;
			var lon = data.results[0].geometry.location.lng;
			$('input[name="place[lat]"]').val(lat);
			$('input[name="place[lon]"]').val(lon);
		} 
	});
}
function getAddressByLatLon(query){
	var data;
	var url = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=';
	$.ajax({ dataType: "json", url: url+query, data: data, success: function(data){
		address = data.results[0].address_components[1].long_name +" "+ data.results[0].address_components[0].long_name;
		$('input[name="place[address]"]').val(address);
		$('input[name="place[city]"]').val(data.results[0].address_components[2].long_name);
		} 
	});
}
</script>